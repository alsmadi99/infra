name: Deploy Services

on:
  push:
    branches:
      - main

jobs:
  clone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and deploy Grafana on Hetzner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}
          script: |
            git clone git@github.com:smadixd/logging.git || git -C logging pull origin main

  deploy_grafana:
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and deploy Grafana on Hetzner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}
          script: |
            cd logging/grafana
            sudo docker build -t my-grafana .
            sudo docker stop my-grafana || true
            sudo docker rm my-grafana || true
            sudo docker run -d --name my-grafana -p 127.0.0.1:8080:8080 --network my-network -v grafana_data:/var/lib/grafana my-grafana

  deploy_prometheus:
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and deploy Prometheus on Hetzner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}
          script: |
            cd logging/prometheus
            sudo docker build -t my-prometheus .
            sudo docker stop my-prometheus || true
            sudo docker rm my-prometheus || true
            sudo docker run -d --name my-prometheus -p 127.0.0.1:9090:9090 --network my-network -v prometheus_data:/prometheus my-prometheus

  deploy_nginx_exporter:
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and deploy NGINX Exporter on Hetzner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}
          script: |
            cd logging/nginx-exporter
            sudo docker build -t my-nginx-exporter .
            sudo docker stop my-nginx-exporter || true
            sudo docker rm my-nginx-exporter || true
            sudo docker run -d --name my-nginx-exporter --network my-network --network-alias=my-nginx -p 127.0.0.1:9113:9113 my-nginx-exporter

  deploy_blackbox_exporter:
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and deploy Blackbox Exporter on Hetzner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}
          script: |
            cd logging/blackbox-exporter
            sudo docker build -t my-blackbox-exporter .
            sudo docker stop my-blackbox-exporter || true
            sudo docker rm my-blackbox-exporter || true
            sudo docker run -d --name my-blackbox-exporter --network my-network -p 127.0.0.1:9115:9115 my-blackbox-exporter

  deploy_fluentd:
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and deploy Fluentd on Hetzner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}
          script: |
            cd logging/fluentd
            sudo docker build -t my-fluentd .
            sudo docker stop my-fluentd || true
            sudo docker rm my-fluentd || true
            sudo docker run -d --name my-fluentd --network my-network -p 127.0.0.1:24231:24231 my-fluentd
            sudo docker network connect my-network my-fluentd || true
